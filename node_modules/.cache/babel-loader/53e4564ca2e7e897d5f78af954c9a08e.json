{"ast":null,"code":"var _jsxFileName = \"/Users/zacharyresnick/Desktop/The_Democratic_Party/the_democratic_party/src/components/mainPages/AllSongs.js\";\nimport React, { Component } from 'react';\nimport SingleSong from './SingleSong';\nimport { connect } from 'react-redux';\nimport Player from './Player'; //connect certain compomnents with the firestore using the firestoreConnect and compose at the bottom of this file:\n\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nexport class AllSongs extends Component {\n  constructor() {\n    super();\n    this.state = {\n      token: null,\n      item: {\n        album: {\n          images: [{\n            url: ''\n          }]\n        },\n        name: '',\n        artists: [{\n          name: ''\n        }],\n        duration_ms: 0\n      },\n      is_playing: 'Paused',\n      progress_ms: 0\n    };\n    this.getCurrentlyPlaying = this.getCurrentlyPlaying.bind(this);\n  }\n\n  componentDidMount() {\n    let _token = this.props.tokens[0]; // Set token\n\n    if (_token) {\n      // Set token\n      this.setState({\n        token: _token\n      });\n      this.getCurrentlyPlaying(_token); // this.playThisSong(_token);\n      // this.viewDevices(_token);\n    }\n  }\n\n  getCurrentlyPlaying(token) {\n    // Make a call using the token\n    $.ajax({\n      url: 'https://api.spotify.com/v1/me/player',\n      type: 'GET',\n      beforeSend: xhr => {\n        xhr.setRequestHeader('Authorization', 'Bearer ' + token);\n      },\n      success: data => {\n        this.setState({\n          item: data.item,\n          is_playing: data.is_playing,\n          progress_ms: data.progress_ms\n        });\n      }\n    });\n  }\n\n  render() {\n    let songs = this.props.songs;\n    let pageSongs = songs && [...songs];\n    let orderedSongs = pageSongs && pageSongs.sort((a, b) => a.upvotes > b.upvotes ? -1 : 1);\n    return React.createElement(\"div\", {\n      className: \"allSongs container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"All Songs\"), React.createElement(\"table\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Title\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Artist\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Album\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Run Time\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Votes\")), songs && orderedSongs.map(song => {\n      return React.createElement(SingleSong, Object.assign({\n        key: song.id\n      }, song, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }));\n    }))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, !this.state.token && React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"No song is playing...\"), this.state.token && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(Player, {\n      item: this.state.item,\n      is_playing: this.state.is_playing,\n      progress_ms: this.progress_ms,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }))));\n  }\n\n} // mapDispatch;\n\nconst mapStateToProps = state => {\n  return {\n    songs: state.firestore.ordered.Songs,\n    tokens: state.firestore.ordered.spotifyToken\n  };\n}; //use compose to connect connect and firestoreConnect together...\n\n\nexport default compose(connect(mapStateToProps, null), firestoreConnect([{\n  collection: 'Songs',\n  orderBy: [['upvotes', 'desc']]\n}, {\n  collection: 'spotifyToken',\n  orderBy: [['timestamp', 'desc']]\n}]))(AllSongs);","map":{"version":3,"sources":["/Users/zacharyresnick/Desktop/The_Democratic_Party/the_democratic_party/src/components/mainPages/AllSongs.js"],"names":["React","Component","SingleSong","connect","Player","firestoreConnect","compose","AllSongs","constructor","state","token","item","album","images","url","name","artists","duration_ms","is_playing","progress_ms","getCurrentlyPlaying","bind","componentDidMount","_token","props","tokens","setState","$","ajax","type","beforeSend","xhr","setRequestHeader","success","data","render","songs","pageSongs","orderedSongs","sort","a","b","upvotes","map","song","id","mapStateToProps","firestore","ordered","Songs","spotifyToken","collection","orderBy"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport SingleSong from './SingleSong';\nimport { connect } from 'react-redux';\nimport Player from './Player';\n\n//connect certain compomnents with the firestore using the firestoreConnect and compose at the bottom of this file:\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\n\nexport class AllSongs extends Component {\n  constructor() {\n    super();\n    this.state = {\n      token: null,\n      item: {\n        album: {\n          images: [{ url: '' }],\n        },\n        name: '',\n        artists: [{ name: '' }],\n        duration_ms: 0,\n      },\n      is_playing: 'Paused',\n      progress_ms: 0,\n    };\n    this.getCurrentlyPlaying = this.getCurrentlyPlaying.bind(this);\n  }\n\n  componentDidMount() {\n    let _token = this.props.tokens[0];\n    // Set token\n    if (_token) {\n      // Set token\n      this.setState({\n        token: _token,\n      });\n      this.getCurrentlyPlaying(_token);\n      // this.playThisSong(_token);\n      // this.viewDevices(_token);\n    }\n  }\n\n  getCurrentlyPlaying(token) {\n    // Make a call using the token\n    $.ajax({\n      url: 'https://api.spotify.com/v1/me/player',\n      type: 'GET',\n      beforeSend: xhr => {\n        xhr.setRequestHeader('Authorization', 'Bearer ' + token);\n      },\n      success: data => {\n        this.setState({\n          item: data.item,\n          is_playing: data.is_playing,\n          progress_ms: data.progress_ms,\n        });\n      },\n    });\n  }\n\n  render() {\n    let { songs } = this.props;\n    let pageSongs = songs && [...songs];\n    let orderedSongs =\n      pageSongs && pageSongs.sort((a, b) => (a.upvotes > b.upvotes ? -1 : 1));\n    return (\n      <div className=\"allSongs container\">\n        <h3 className=\"center\">All Songs</h3>\n        <table className=\"container\">\n          <tbody>\n            <tr>\n              <th>Title</th>\n              <th>Artist</th>\n              <th>Album</th>\n              <th>Run Time</th>\n              <th>Votes</th>\n            </tr>\n            {songs &&\n              orderedSongs.map(song => {\n                return <SingleSong key={song.id} {...song} />;\n              })}\n          </tbody>\n        </table>\n        <div>\n          {!this.state.token && <h4>No song is playing...</h4>}\n          {this.state.token && (\n            <div>\n              <Player\n                item={this.state.item}\n                is_playing={this.state.is_playing}\n                progress_ms={this.progress_ms}\n              />\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\n// mapDispatch;\nconst mapStateToProps = state => {\n  return {\n    songs: state.firestore.ordered.Songs,\n    tokens: state.firestore.ordered.spotifyToken,\n  };\n};\n\n//use compose to connect connect and firestoreConnect together...\nexport default compose(\n  connect(\n    mapStateToProps,\n    null\n  ),\n  firestoreConnect([\n    { collection: 'Songs', orderBy: [['upvotes', 'desc']] },\n    { collection: 'spotifyToken', orderBy: [['timestamp', 'desc']] },\n  ])\n)(AllSongs);\n"]},"metadata":{},"sourceType":"module"}