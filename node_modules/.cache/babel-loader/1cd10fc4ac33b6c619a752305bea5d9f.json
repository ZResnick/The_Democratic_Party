{"ast":null,"code":"import _objectSpread from \"/Users/zacharyresnick/Desktop/The_Democratic_Party/the_democratic_party/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport history from '../../history';\nconst initialState = [{\n  title: 'Wannabe',\n  artist: 'The Spice Girls',\n  album: 'Spice',\n  length: 3.9\n}, {\n  title: \"I'm Not Willing\",\n  artist: 'Moby Grape',\n  album: 'Longfrom',\n  length: 2.75\n}, {\n  title: 'Easy Love',\n  artist: 'MSTRKRFT',\n  album: 'Electric Feel',\n  length: 3.25\n}]; //this will be an array of objects\n//CONSTANTS:\n\nconst ADDED_A_SONG = 'ADDED_A_SONG'; //ACTION CREATORS\n\nconst addedASong = song => ({\n  type: ADDED_A_SONG,\n  song\n}); //THUNKS\n\n\nexport const addASong = song => async (dispatch, getState, //the firestore functions on line 38 WILL NOT WORK WITHOUT THIS GETSTATE!!!\n{\n  getFirebase,\n  getFirestore\n}) => {\n  try {\n    const firestore = getFirestore(); //this is the call that gets us access to firestore:\n    //gets us a reference to the Songs Collection and then adds a document using .add({document })\n\n    await firestore.collection('Songs').add(_objectSpread({}, song));\n    history.push('/'); // dispatch(addedASong(song));\n  } catch (err) {\n    console.error(err);\n  }\n}; // const songReducer = (state = initialState, action) => {\n//   switch (action.type) {\n//     case ADDED_A_SONG:\n//       console.log('HELLLLLLOOOOOOO');\n//       return [...state, action.song];\n//     default:\n//       return state;\n//   }\n// };\n// export default songReducer;","map":{"version":3,"sources":["/Users/zacharyresnick/Desktop/The_Democratic_Party/the_democratic_party/src/store/reducers/songReducer.js"],"names":["history","initialState","title","artist","album","length","ADDED_A_SONG","addedASong","song","type","addASong","dispatch","getState","getFirebase","getFirestore","firestore","collection","add","push","err","console","error"],"mappings":";AAAA,OAAOA,OAAP,MAAoB,eAApB;AAEA,MAAMC,YAAY,GAAG,CACnB;AAAEC,EAAAA,KAAK,EAAE,SAAT;AAAoBC,EAAAA,MAAM,EAAE,iBAA5B;AAA+CC,EAAAA,KAAK,EAAE,OAAtD;AAA+DC,EAAAA,MAAM,EAAE;AAAvE,CADmB,EAEnB;AACEH,EAAAA,KAAK,EAAE,iBADT;AAEEC,EAAAA,MAAM,EAAE,YAFV;AAGEC,EAAAA,KAAK,EAAE,UAHT;AAIEC,EAAAA,MAAM,EAAE;AAJV,CAFmB,EAQnB;AACEH,EAAAA,KAAK,EAAE,WADT;AAEEC,EAAAA,MAAM,EAAE,UAFV;AAGEC,EAAAA,KAAK,EAAE,eAHT;AAIEC,EAAAA,MAAM,EAAE;AAJV,CARmB,CAArB,C,CAcG;AAEH;;AACA,MAAMC,YAAY,GAAG,cAArB,C,CAEA;;AACA,MAAMC,UAAU,GAAGC,IAAI,KAAK;AAAEC,EAAAA,IAAI,EAAEH,YAAR;AAAsBE,EAAAA;AAAtB,CAAL,CAAvB,C,CAEA;;;AAEA,OAAO,MAAME,QAAQ,GAAGF,IAAI,IAAI,OAC9BG,QAD8B,EAE9BC,QAF8B,EAEpB;AACV;AAAEC,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAH8B,KAI3B;AACH,MAAI;AACF,UAAMC,SAAS,GAAGD,YAAY,EAA9B,CADE,CACgC;AAClC;;AACA,UAAMC,SAAS,CAACC,UAAV,CAAqB,OAArB,EAA8BC,GAA9B,mBAAuCT,IAAvC,EAAN;AACAR,IAAAA,OAAO,CAACkB,IAAR,CAAa,GAAb,EAJE,CAKF;AACD,GAND,CAME,OAAOC,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACD;AACF,CAdM,C,CAgBP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import history from '../../history';\n\nconst initialState = [\n  { title: 'Wannabe', artist: 'The Spice Girls', album: 'Spice', length: 3.9 },\n  {\n    title: \"I'm Not Willing\",\n    artist: 'Moby Grape',\n    album: 'Longfrom',\n    length: 2.75,\n  },\n  {\n    title: 'Easy Love',\n    artist: 'MSTRKRFT',\n    album: 'Electric Feel',\n    length: 3.25,\n  },\n]; //this will be an array of objects\n\n//CONSTANTS:\nconst ADDED_A_SONG = 'ADDED_A_SONG';\n\n//ACTION CREATORS\nconst addedASong = song => ({ type: ADDED_A_SONG, song });\n\n//THUNKS\n\nexport const addASong = song => async (\n  dispatch,\n  getState, //the firestore functions on line 38 WILL NOT WORK WITHOUT THIS GETSTATE!!!\n  { getFirebase, getFirestore }\n) => {\n  try {\n    const firestore = getFirestore(); //this is the call that gets us access to firestore:\n    //gets us a reference to the Songs Collection and then adds a document using .add({document })\n    await firestore.collection('Songs').add({ ...song });\n    history.push('/');\n    // dispatch(addedASong(song));\n  } catch (err) {\n    console.error(err);\n  }\n};\n\n// const songReducer = (state = initialState, action) => {\n//   switch (action.type) {\n//     case ADDED_A_SONG:\n//       console.log('HELLLLLLOOOOOOO');\n//       return [...state, action.song];\n//     default:\n//       return state;\n//   }\n// };\n\n// export default songReducer;\n"]},"metadata":{},"sourceType":"module"}