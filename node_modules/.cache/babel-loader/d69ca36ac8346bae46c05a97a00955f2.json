{"ast":null,"code":"var _jsxFileName = \"/Users/zacharyresnick/Desktop/The_Democratic_Party/the_democratic_party/src/components/mainPages/AllSongs.js\";\nimport React, { Component } from 'react';\nimport SingleSong from './SingleSong';\nimport { connect } from 'react-redux';\nimport getAllSongs from '../../store/reducers/songReducer'; //connect certain compomnents with the firestore using the firestoreConnect and compose at the bottom of this file:\n\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nexport class AllSongs extends Component {\n  render() {\n    const songs = this.props.songs;\n    console.log(songs);\n    return React.createElement(\"div\", {\n      className: \"allSongs container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, \"All Songs\"), React.createElement(\"ul\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, songs && songs.map(song => {\n      return React.createElement(SingleSong, Object.assign({\n        key: song.title\n      }, song, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }));\n    })));\n  }\n\n} // mapDispatch;\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    songs: state.songs\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  getAllSongs: () => {\n    dispatch(getAllSongs());\n  }\n}); //use compose to connect connect and firestoreConnect together...\n\n\nexport default compose(connect(mapStateToProps, mapDispatchToProps), firestoreConnect([{\n  collection: 'Songs'\n}]))(AllSongs);","map":{"version":3,"sources":["/Users/zacharyresnick/Desktop/The_Democratic_Party/the_democratic_party/src/components/mainPages/AllSongs.js"],"names":["React","Component","SingleSong","connect","getAllSongs","firestoreConnect","compose","AllSongs","render","songs","props","console","log","map","song","title","mapStateToProps","state","mapDispatchToProps","dispatch","collection"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,WAAP,MAAwB,kCAAxB,C,CAEA;;AACA,SAASC,gBAAT,QAAiC,sBAAjC;AACA,SAASC,OAAT,QAAwB,OAAxB;AAEA,OAAO,MAAMC,QAAN,SAAuBN,SAAvB,CAAiC;AACtCO,EAAAA,MAAM,GAAG;AAAA,UACCC,KADD,GACW,KAAKC,KADhB,CACCD,KADD;AAEPE,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACA,WACE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,KAAK,IACJA,KAAK,CAACI,GAAN,CAAUC,IAAI,IAAI;AAChB,aAAO,oBAAC,UAAD;AAAY,QAAA,GAAG,EAAEA,IAAI,CAACC;AAAtB,SAAiCD,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACD,KAFD,CAFJ,CAFF,CADF;AAWD;;AAfqC,C,CAkBxC;;AACA,MAAME,eAAe,GAAGC,KAAK,IAAI;AAC/BN,EAAAA,OAAO,CAACC,GAAR,CAAYK,KAAZ;AACA,SAAO;AACLR,IAAAA,KAAK,EAAEQ,KAAK,CAACR;AADR,GAAP;AAGD,CALD;;AAOA,MAAMS,kBAAkB,GAAGC,QAAQ,KAAK;AACtCf,EAAAA,WAAW,EAAE,MAAM;AACjBe,IAAAA,QAAQ,CAACf,WAAW,EAAZ,CAAR;AACD;AAHqC,CAAL,CAAnC,C,CAMA;;;AACA,eAAeE,OAAO,CACpBH,OAAO,CACLa,eADK,EAELE,kBAFK,CADa,EAKpBb,gBAAgB,CAAC,CAAC;AAAEe,EAAAA,UAAU,EAAE;AAAd,CAAD,CAAD,CALI,CAAP,CAMbb,QANa,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport SingleSong from './SingleSong';\nimport { connect } from 'react-redux';\nimport getAllSongs from '../../store/reducers/songReducer';\n\n//connect certain compomnents with the firestore using the firestoreConnect and compose at the bottom of this file:\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\n\nexport class AllSongs extends Component {\n  render() {\n    const { songs } = this.props;\n    console.log(songs);\n    return (\n      <div className=\"allSongs container\">\n        <h3 className=\"center\">All Songs</h3>\n        <ul className=\"container\">\n          {songs &&\n            songs.map(song => {\n              return <SingleSong key={song.title} {...song} />;\n            })}\n        </ul>\n      </div>\n    );\n  }\n}\n\n// mapDispatch;\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    songs: state.songs,\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  getAllSongs: () => {\n    dispatch(getAllSongs());\n  },\n});\n\n//use compose to connect connect and firestoreConnect together...\nexport default compose(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  ),\n  firestoreConnect([{ collection: 'Songs' }])\n)(AllSongs);\n"]},"metadata":{},"sourceType":"module"}