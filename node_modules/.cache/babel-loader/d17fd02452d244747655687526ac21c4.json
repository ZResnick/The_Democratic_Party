{"ast":null,"code":"var _jsxFileName = \"/Users/zacharyresnick/Desktop/The_Democratic_Party/the_democratic_party/src/components/mainPages/Spotify.js\";\nimport React, { Component } from 'react';\nimport * as $ from 'jquery';\nimport { authEndpoint, clientId, redirectUri, scopes } from './spotifyConfig';\nimport hash from './hash';\nimport Player from './Player';\n\nclass Spotify extends Component {\n  constructor() {\n    super();\n    this.state = {\n      device: '',\n      token: null,\n      item: {\n        album: {\n          images: [{\n            url: ''\n          }]\n        },\n        name: '',\n        artists: [{\n          name: ''\n        }],\n        duration_ms: 0\n      },\n      is_playing: 'Paused',\n      progress_ms: 0\n    };\n    this.getCurrentlyPlaying = this.getCurrentlyPlaying.bind(this);\n    this.play = this.play.bind(this);\n  }\n\n  componentDidMount() {\n    // Set token\n    let _token = hash.access_token;\n\n    if (_token) {\n      // Set token\n      this.setState({\n        token: _token\n      });\n      this.getCurrentlyPlaying(_token);\n      this.playThisSong(_token);\n      this.viewDevices(_token);\n      this.play(_token, 'spotify:track:7xGfFoTpQ2E7fRF5lN10tr');\n    }\n  }\n\n  getCurrentlyPlaying(token) {\n    // Make a call using the token\n    $.ajax({\n      url: 'https://api.spotify.com/v1/me/player',\n      type: 'GET',\n      beforeSend: xhr => {\n        xhr.setRequestHeader('Authorization', 'Bearer ' + token);\n      },\n      success: data => {\n        this.setState({\n          item: data.item,\n          is_playing: data.is_playing,\n          progress_ms: data.progress_ms\n        });\n      }\n    });\n  }\n\n  playThisSong(token) {\n    // Make a call using the token\n    $.ajax({\n      url: 'https://api.spotify.com/v1/search?q=better%20now&type=track',\n      type: 'GET',\n      beforeSend: xhr => {\n        xhr.setRequestHeader('Authorization', 'Bearer ' + token);\n      },\n      success: data => {\n        console.log('data.tracks.items.0.uri:', data.tracks.items[0].uri);\n        let songUri = data.tracks.items[0].uri;\n      }\n    });\n  }\n\n  viewDevices(token) {\n    // Make a call using the token\n    $.ajax({\n      url: 'https://api.spotify.com/v1/me/player/devices',\n      type: 'GET',\n      beforeSend: xhr => {\n        xhr.setRequestHeader('Authorization', 'Bearer ' + token);\n      },\n      success: data => {\n        console.log('DEVICES', data);\n      }\n    });\n  }\n\n  play(access_token, spotify_uri) {\n    fetch(\"https://api.spotify.com/v1/me/player/play?device_id=46c18ae2df8c1f2594983d197f664a9c6677ff6d\", {\n      method: 'PUT',\n      body: JSON.stringify({\n        uris: [spotify_uri]\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: \"Bearer \".concat(access_token)\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, !this.state.token && React.createElement(\"a\", {\n      className: \"btn btn--loginApp-link\",\n      href: \"\".concat(authEndpoint, \"?client_id=\").concat(clientId, \"&redirect_uri=\").concat(redirectUri, \"&scope=\").concat(scopes.join('%20'), \"&response_type=token&show_dialog=true\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Login to Spotify\"), this.state.token && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(Player, {\n      item: this.state.item,\n      is_playing: this.state.is_playing,\n      progress_ms: this.progress_ms,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: () => this.play(this.state.token, 'spotify:track:7xGfFoTpQ2E7fRF5lN10tr'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Click ME!!!!!\"))));\n  }\n\n}\n\nexport default Spotify;","map":{"version":3,"sources":["/Users/zacharyresnick/Desktop/The_Democratic_Party/the_democratic_party/src/components/mainPages/Spotify.js"],"names":["React","Component","$","authEndpoint","clientId","redirectUri","scopes","hash","Player","Spotify","constructor","state","device","token","item","album","images","url","name","artists","duration_ms","is_playing","progress_ms","getCurrentlyPlaying","bind","play","componentDidMount","_token","access_token","setState","playThisSong","viewDevices","ajax","type","beforeSend","xhr","setRequestHeader","success","data","console","log","tracks","items","uri","songUri","spotify_uri","fetch","method","body","JSON","stringify","uris","headers","Authorization","render","join"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport * as $ from 'jquery';\nimport { authEndpoint, clientId, redirectUri, scopes } from './spotifyConfig';\nimport hash from './hash';\nimport Player from './Player';\n\nclass Spotify extends Component {\n  constructor() {\n    super();\n    this.state = {\n      device: '',\n      token: null,\n      item: {\n        album: {\n          images: [{ url: '' }],\n        },\n        name: '',\n        artists: [{ name: '' }],\n        duration_ms: 0,\n      },\n      is_playing: 'Paused',\n      progress_ms: 0,\n    };\n    this.getCurrentlyPlaying = this.getCurrentlyPlaying.bind(this);\n    this.play = this.play.bind(this);\n  }\n  componentDidMount() {\n    // Set token\n    let _token = hash.access_token;\n\n    if (_token) {\n      // Set token\n      this.setState({\n        token: _token,\n      });\n      this.getCurrentlyPlaying(_token);\n      this.playThisSong(_token);\n      this.viewDevices(_token);\n      this.play(_token, 'spotify:track:7xGfFoTpQ2E7fRF5lN10tr');\n    }\n  }\n\n  getCurrentlyPlaying(token) {\n    // Make a call using the token\n    $.ajax({\n      url: 'https://api.spotify.com/v1/me/player',\n      type: 'GET',\n      beforeSend: xhr => {\n        xhr.setRequestHeader('Authorization', 'Bearer ' + token);\n      },\n      success: data => {\n        this.setState({\n          item: data.item,\n          is_playing: data.is_playing,\n          progress_ms: data.progress_ms,\n        });\n      },\n    });\n  }\n\n  playThisSong(token) {\n    // Make a call using the token\n    $.ajax({\n      url: 'https://api.spotify.com/v1/search?q=better%20now&type=track',\n      type: 'GET',\n      beforeSend: xhr => {\n        xhr.setRequestHeader('Authorization', 'Bearer ' + token);\n      },\n      success: data => {\n        console.log('data.tracks.items.0.uri:', data.tracks.items[0].uri);\n        let songUri = data.tracks.items[0].uri;\n      },\n    });\n  }\n\n  viewDevices(token) {\n    // Make a call using the token\n    $.ajax({\n      url: 'https://api.spotify.com/v1/me/player/devices',\n      type: 'GET',\n      beforeSend: xhr => {\n        xhr.setRequestHeader('Authorization', 'Bearer ' + token);\n      },\n      success: data => {\n        console.log('DEVICES', data);\n      },\n    });\n  }\n\n  play(access_token, spotify_uri) {\n    fetch(\n      `https://api.spotify.com/v1/me/player/play?device_id=46c18ae2df8c1f2594983d197f664a9c6677ff6d`,\n      {\n        method: 'PUT',\n        body: JSON.stringify({ uris: [spotify_uri] }),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${access_token}`,\n        },\n      }\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <header>\n          {!this.state.token && (\n            <a\n              className=\"btn btn--loginApp-link\"\n              href={`${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\n                '%20'\n              )}&response_type=token&show_dialog=true`}\n            >\n              Login to Spotify\n            </a>\n          )}\n          {this.state.token && (\n            <div>\n              <Player\n                item={this.state.item}\n                is_playing={this.state.is_playing}\n                progress_ms={this.progress_ms}\n              />\n              <button\n                onClick={() =>\n                  this.play(\n                    this.state.token,\n                    'spotify:track:7xGfFoTpQ2E7fRF5lN10tr'\n                  )\n                }\n              >\n                Click ME!!!!!\n              </button>\n            </div>\n          )}\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default Spotify;\n"]},"metadata":{},"sourceType":"module"}